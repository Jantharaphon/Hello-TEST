#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>
#include <ir_Panasonic.h>
#include <BlynkSimpleEsp8266.h>


const char *ssid =     "WIFI_NAME";         // ãÊèª×èÍ WiFi ¢Í§àÃÒµÃ§¹Õé
const char *password = "WIFI_PASSWORD";     // ãÊè Password WiFi ¢Í§àÃÒµÃ§¹Õé
char auth[] = "xxxxxxxxxxxxxxxxxxxxxx";     // ãÊè Token ·Õèä´é¨Ò¡ blynk µÃ§¹Õé



/**
 * IRRemote
 */
    const uint16_t kIrLed = 4;  // ESP8266 GPIO pin to use. Recommended: 4 (D2).
    IRPanasonicAc ac(kIrLed);   // ÊÃéÒ§ Object ·Õèãªé¤ØÁáÍÃìáºº Panasonic (ËÒ¡à»ç¹ÂÕèËéÍÍ×è¹ãËé´ÙµÑÇÍÂèÒ§ã¹ Library IRRemoteESP8266)
    
    
    int temp_ac = 25; //ÍØ³ËÀÙÁÔµÑé§µé¹
    typedef enum{
      REQ_NONE =0,  //äÁèÁÕ¤ÓÊÑè§
      REQ_ON_AC,    //¤ÓÊÑè§à»Ô´áÍÃì
      REQ_OFF_AC,   //¤ÓÊÑè§»Ô´áÍÃì
      REQ_TEMP_AC   //¤ÓÊÑè§»ÃÑºÍØ³ËÀÙÁÔ
    }req_en;
    
    req_en req;
    int retry = 0;
    unsigned long last_retry=0;



/**
 * µÑé§¤èÒ BLYNK
 */
    #define BLYNK_PRINT Serial

    //àÁ×èÍÁÕ¡ÒÃ¡´»ØèÁà»Ô´áÍÃì (virtual pin 1) ¿Ñ§¡ìªÑ¹¹Õé¨Ð·Ó§Ò¹
    BLYNK_WRITE(V1)
    {
      if(param.asInt()) {
        Serial.println("Req on recv");
        req = REQ_ON_AC;
      }
    }

    //àÁ×èÍÁÕ¡ÒÃ¡´»ØèÁ»Ô´áÍÃì (virtual pin 2) ¿Ñ§¡ìªÑ¹¹Õé¨Ð·Ó§Ò¹
    BLYNK_WRITE(V2)
    {
      if(param.asInt()) {
        Serial.println("Req off recv");
        req = REQ_OFF_AC;
      }
    }

    //àÁ×èÍÁÕ¡ÒÃ»ÃÑºÍØ³ËÀÙÁÔ (virtual pin 0) ¿Ñ§¡ìªÑ¹¹Õé¨Ð·Ó§Ò¹
    BLYNK_WRITE(V0)
    {
      temp_ac = param.asInt();
      Serial.println("Req temp = " + String(temp_ac));
      req = REQ_TEMP_AC;
    }
    BlynkTimer timer;  //àÃÕÂ¡ãªé¡ÒÃµÑé§àÇÅÒ¢Í§ Blynk
    

/**
 * áÊ´§Ê¶Ò¹Ð¢Í§¢éÍÁÙÅ·ÕèàÃÒ¨ÐÊè§ÍÍ¡ä»ÂÑ§áÍÃì
 */
    
    
